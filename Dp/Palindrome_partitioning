class Solution{
public:
bool ispalindrome(string&s,int i,int j){
    while(i<j){
        if(s[i]!=s[j])return false;
        i++;
        j--;
    }
    return true;
}
int dp[501][501];
     int answer(string&s,int i,int j){
         if(i>j)return 0;
         if(dp[i][j]!=-1)return dp[i][j];
         if(ispalindrome(s,i,j))return 0;
         int mn=INT_MAX;
         for(int k=i;k<j;k++){
             int x=1+answer(s,i,k)+answer(s,k+1,j);
             mn=min(x,mn);
         }
         return dp[i][j]=mn;
     }
    int palindromicPartition(string str)
    {
        memset(dp,-1,sizeof(dp));
       return answer(str,0,str.length()-1);
    }
};
