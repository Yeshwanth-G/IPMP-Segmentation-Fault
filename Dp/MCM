//O(n^3),O(N^2)
class Solution{
public:
int dp[101][101];
    int answer(int i,int j,int arr[]){
        int mn=INT_MAX;
        if(i>=j)return 0;
        if(dp[i][j]!=-1)return dp[i][j];
        for(int k=i;k<j;k++){
            int x=answer(i,k,arr)+answer(k+1,j,arr)+arr[i-1]*arr[k]*arr[j];
            mn=min(mn,x);
        }
        return dp[i][j]=mn;
        
    }
    int matrixMultiplication(int N, int arr[])
    {
        memset(dp,-1,sizeof(dp));
        return answer(1,N-1,arr);
    }
};
----------------------------------------------------------------------------------------
//Tabulated.
    int matrixMultiplication(int N, int arr[])
    {
        int dp[N][N];
        memset(dp,0,sizeof(dp));
        for(int l=2;l<N;l++){
            for(int j=1;j<N;j++){
                if(j+l>N){dp[j][l]=0;continue;}
                int mn=INT_MAX;
                for(int k=1;k<l;k++){
                    int x=dp[j][k]+dp[j+k][l-k]+arr[j-1]*arr[j+k-1]*arr[j+l-1];
                    mn=min(mn,x);
                }
                dp[j][l]=mn;
            }
        }
        return dp[1][N-1];
    }
