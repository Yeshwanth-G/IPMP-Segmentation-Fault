 //By maintaing relative order is not possible(only in O(N^2) possible)
 -----------------------------------------------------------------------------------
 //using extra space;
 vector<int> sortArrayByParityII(vector<int>& nums) {
        vector<int>evn,odd;
        int n=nums.size();
        for(int i=0;i<n;i++){
            if(nums[i]&1){
                odd.push_back(nums[i]);
            }
            else evn.push_back(nums[i]);
        }
        int e=0,o=0;
        for(int i=0;i<n;i++){
            if(i%2==0){
                nums[i]=evn[e++];
            }else{
                nums[i]=odd[o++];
            }
        }
        return nums;
    }
------------------------------------------------------------------------------------
//using two pointers.-O(N),O(1)
int p1=0,p2=1;
        int n=nums.size();
        while(p1<n&&p2<n){
            while(p1<n&&nums[p1]%2==0)p1=p1+2;
            while(p2<n&&nums[p2]%2==1)p2=p2+2;
           
            if(p1<n&&p2<n){swap(nums[p1],nums[p2]);p1=p1+2;p2=p2+2;}
        }
        return nums;
    }
