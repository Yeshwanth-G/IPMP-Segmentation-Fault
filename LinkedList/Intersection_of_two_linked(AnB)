O(m+n),O(min(m,n))---
//Iterative
Node* findIntersection(Node* head1, Node* head2)
{     Node*head=NULL,*r;
    while(head1&&head2){
        if(head1->data==head2->data){
            Node*p=new Node(head1->data);
            if(head==NULL)
            {
            head=p;
             r=p;   
            }
            else{
              r->next=p;
              r=p;
            }
           head1=head1->next;
           head2=head2->next;
        }
        else if(head1->data>head2->data){
            head2=head2->next;
        }
        else if(head2->data>head1->data){
            head1=head1->next;
        }
    }
        return head;
    }
---------------------------------------------------------
//recursive
Node* findIntersection(Node* head1, Node* head2)
{
 if(head1==nullptr||head2==nullptr)return head1;
 if(head1->data<head2->data)return findIntersection(head1->next,head2);
 else if(head1->data>head2->data)return findIntersection(head1,head2->next);
 else{
     Node*temp=new Node(head1->data);
     temp->next=findIntersection(head1->next,head2->next);
     return temp;
 }
    
}
