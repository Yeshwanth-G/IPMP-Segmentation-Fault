bool hasArrayTwoCandidates(int arr[], int n, int x) {
	    //approach 1: traversering array for each element to find sum-given element;Time:O(N^2),space:O(1)
	   // for(int i=0;i<n;i++){
	   //     for(int j=i;j<n;j++){
	   //         if(arr[j]==x-arr[i])
	   //         return true;
	   //     }
	   // }
	   //Approch 2: using hashmap to search for sum-given element in constant time.Time:O(array length),space:O(n);
	    unordered_map<int,int>hmap;//searching complexity becomes O(1)-Hashing
	    hmap[arr[0]]=0;
	   for(int i=1;i<n;i++)
	   {
	       auto it=hmap.find(x-arr[i]);//O(1)
	       if(it==hmap.end())
	       hmap[arr[i]]=i;//O(1)
	       else return true;
	   }
	   
	   return false;
	}
