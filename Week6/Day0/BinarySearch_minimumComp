#include<iostream>
#include<unordered_map>
#include<math.h>
#include<vector>
using namespace std;
//Time:O(n),space:O(1);
//Comparisions:2*logn+2==>(2*logn inside loop one during termination condition at loop condition an other after loop ends;)
void reverse(string&s,int a,int b){
if(a>=b)return;
swap(s[a],s[b]);
reverse(s,a+1,b-1); 
}
bool bin_search(vector<int>&v,int a){
    int s=0,e=v.size()-1,mid;
    while(s<e){
        mid=(s+e)/2;
        //if(a==v[mid])return;-->normal binary search==>2 comparisions per iteration==>2*logn comparisions
        if(a<=v[mid])//Now atlast e will point to the first occurence of target in array
        e=mid;
        else
        s=mid+1;
    }
    if(v[e]==a)return true;
    else return false;
}
int main(){
int n;
cin>>n;
vector<int>v(n);
int d;
for(int i=0;i<n;i++){
    cin>>v[i];}
cout<<bin_search(v,6);
return 0;
}
